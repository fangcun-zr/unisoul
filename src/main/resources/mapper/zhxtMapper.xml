<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zr.uniSoul.mapper.zhxtMapper">
    <insert id="insert">
        insert into article(title,author_id,content,create_time,cover_image,tags,category_id,update_time) values(#{title},#{author_id},#{content},#{create_time},#{cover_image},#{tags},#{category_id},#{update_time})
    </insert>
    <insert id="addComments">
        insert into article_comment(article_id,user_id,create_time,content,update_time) values(#{articleId},#{userId},#{createTime},#{content},#{updateTime})
    </insert>
    <insert id="likeComments">
        insert into likes(article_comment_id,user_id,create_time,update_time) values(#{articleCommentId},#{userId},#{createTime},#{updateTime})
    </insert>
    <insert id="addviewCount">
        update article set view_count = view_count + 1 where id = #{articleId}
    </insert>
    <update id="checkArticle">
        update article set status = #{status} where id = #{article_id}
    </update>
    <update id="updateUserTagScores">
        update user_action set tag_scores = #{tagScores} where user_id = #{userId}
    </update>
    <delete id="deleteArticle">
        delete from article where id = #{articleId}
    </delete>

    <resultMap id="article" type="com.zr.uniSoul.pojo.entity.Article">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="category_id" column="category_id"/>
        <result property="cover_image" column="cover_image"/> <!-- 确保字段名一致 -->
        <result property="tags" column="tags"/>
        <result property="author_id" column="author_id"/>
        <result property="status" column="status"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="create_time" column="create_time"/>
        <result property="update_time" column="update_time"/>
    </resultMap>

    <select id="pageQuery" resultMap="article">
        select id,title,content,cover_image,tags,author_id,status,view_count,like_count,comment_count,create_time,update_time
        from article
        <where>
            <if test="category_id != null">
                and category_id = #{category_id}
            </if>
        </where>
        order by like_count asc, create_time desc
    </select>

    <select id="getComments" resultType="com.zr.uniSoul.pojo.entity.Comments">
        select * from article_comment where article_id = #{articleId} order by create_time desc
    </select>
    <select id="pageQueryAll" resultMap="article">
        select id,id,title,content,category_id,cover_image,tags,author_id,status,view_count,like_count,comment_count,create_time,update_time
        from article order by like_count asc , create_time desc
    </select>
    <select id="countQuery" resultType="java.lang.Long">
        SELECT COUNT(*) FROM article <where> <if test='category_id != null'>AND category_id = #{category_id}</if></where>
    </select>
    <select id="getArticleDetailById"  resultMap="article">
      select * from article where id = #{id}
    </select>
    <select id="getUserIdByArticleId" resultType="java.lang.Integer">
        select author_id from article where id = #{articleId}
    </select>
    <select id="getUserById" resultType="com.zr.uniSoul.pojo.entity.User">
     select * from user where id = #{userId}
    </select>
    <select id="pageQueryForKeyWords" resultMap="article">
        select id,title,content,cover_image,tags,author_id,status,view_count,like_count,comment_count,create_time,update_time
        from article
 <where>
            <if test="category_id != null">
         and category_id = #{category_id}
     </if>
     <if test="keyWords != null and keyWords != ''">
         and (title like concat('%', #{keyWords}, '%') or content like concat('%', #{keyWords}, '%'))
     </if>
 </where> order by like_count asc, create_time desc
    </select>
    <select id="countQueryForKeyWords" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM article <where> <if test='category_id != null'>
        AND category_id = #{category_id}</if> <if test="keyWords != null and keyWords != ''">
        AND (title LIKE CONCAT('%', #{keyWords}, '%') OR content LIKE CONCAT('%', #{keyWords}, '%'))</if></where>
    </select>
    <select id="getContent" resultType="java.lang.String">
        select content from article where id = #{id}
    </select>
    <select id="getTagsByArticleId" resultType="java.lang.String">
        select tags from article where id = #{articleId}
    </select>
    <select id="getjsonInput" resultType="java.lang.String">
        select tag_scores from user_action where user_id = #{userId}
    </select>
</mapper>